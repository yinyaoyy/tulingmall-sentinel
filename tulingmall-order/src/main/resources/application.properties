# \u914D\u7F6Eds0 \u548Cds1\u4E24\u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=ds,ds0,ds1
#ds1 \u914D\u7F6E
spring.shardingsphere.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds.url=jdbc:mysql://localhost:3306/micromall?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#\u521D\u59CB\u8FDE\u63A5\u6570
spring.shardingsphere.datasource.ds.initialSize=5
#\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570
spring.shardingsphere.datasource.ds.minIdle=10
#\u6700\u5927\u8FDE\u63A5\u6570
spring.shardingsphere.datasource.ds.maxActive=30
spring.shardingsphere.datasource.ds.validationQuery=SELECT 1 FROM DUAL
spring.shardingsphere.datasource.ds.username=root
spring.shardingsphere.datasource.ds.password=root
#ds0 \u914D\u7F6E
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/micromall_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds0.initialSize=5
spring.shardingsphere.datasource.ds0.minIdle=10
spring.shardingsphere.datasource.ds0.maxActive=30
spring.shardingsphere.datasource.ds0.validationQuery=SELECT 1 FROM DUAL
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root
#ds1 \u914D\u7F6E
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/micromall_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds1.initialSize=5
spring.shardingsphere.datasource.ds1.minIdle=10
spring.shardingsphere.datasource.ds1.maxActive=30
spring.shardingsphere.datasource.ds1.validationQuery=SELECT 1 FROM DUAL
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# \u5BF9\u4E8E\u6CA1\u6709\u505A\u4EFB\u4F55\u4E1A\u52A1\u62C6\u5206\u7684\u8868\uFF0C\u76F4\u63A5\u8D70\u672C\u9ED8\u8BA4\u6570\u636E\u6E90\u5373\u53EF
spring.shardingsphere.sharding.default-data-source-name=ds

spring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.tuling.tulingmall.sharding.OrderAllRangeHintAlgorithm
spring.shardingsphere.sharding.default-table-strategy.hint.algorithm-class-name=com.tuling.tulingmall.sharding.OrderAllRangeHintAlgorithm
# oms_order\u5206\u7247\u7B56\u7565
# \u8282\u70B9 ds0.oms_order_0,ds0.oms_order_1,ds1.oms_order_0,ds1.oms_order_1
spring.shardingsphere.sharding.tables.oms_order.actual-data-nodes=ds$->{0..1}.oms_order_$->{0..1}
#\u5206\u5E93\u7B56\u7565
spring.shardingsphere.sharding.tables.oms_order.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.oms_order.database-strategy.inline.algorithm-expression=ds$->{id % 2}
# \u5206\u8868\u7B56\u7565
spring.shardingsphere.sharding.tables.oms_order.table-strategy.inline.sharding-column=id
# \u6CE8\u610F\u4E0B\uFF0C\u5BF9\u4E8E\u9664\u6CD5\uFF0Cgroovy\u4F1A\u8BA1\u7B97\u51FA\u6D6E\u70B9\u6570\uFF0C\u800C\u4E0D\u662F\u6574\u6570\u3002\u5373 3/2=1.5\uFF0C\u5982\u679C\u9700\u8981\u8BA1\u7B97\u51FA\u6574\u6570 3.intdiv(2)=1
spring.shardingsphere.sharding.tables.oms_order.table-strategy.inline.algorithm-expression = oms_order_$->{((id+1) % 4).intdiv(2)}
# \u590D\u5408\u5206\u7247\u7B97\u6CD5
#spring.shardingsphere.sharding.tables.oms_order.table-strategy.complex.sharding-columns=id
#spring.shardingsphere.sharding.tables.oms_order.table-strategy.complex.algorithm-class-name = com.tuling.tulingmall.sharding.OrderComplexShardingAlgorithm
# \u4F7F\u7528SNOWFLAKE\u7B97\u6CD5\u751F\u6210\u4E3B\u952E
spring.shardingsphere.sharding.tables.oms_order.key-generator.column=id
spring.shardingsphere.sharding.tables.oms_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.oms_order.key-generator.props.worker.id=123
# \u4F7F\u7528\u81EA\u5B9A\u4E49\u4E3B\u952E\u751F\u6210\u7B56\u7565
#spring.shardingsphere.sharding.tables.oms_order.key-generator.type=CUSTOM
#spring.shardingsphere.sharding.tables.oms_order.key-generator.props.redis.prefix=order:id:prefix:

# \u8282\u70B9 ds0.oms_order_item_0,ds0.oms_order_item_1,ds1.oms_order_item_0,ds1.oms_order_item_1
spring.shardingsphere.sharding.tables.oms_order_item.actual-data-nodes=ds$->{0..1}.oms_order_item_$->{0..1}
# \u5206\u5E93\u7B56\u7565 \u6309order_id\u5206\u7247
spring.shardingsphere.sharding.tables.oms_order_item.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.oms_order_item.database-strategy.inline.algorithm-expression=ds$->{order_id % 2}
# \u5206\u8868\u7B56\u7565
spring.shardingsphere.sharding.tables.oms_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.oms_order_item.table-strategy.inline.algorithm-expression=oms_order_item_$->{((order_id+1) % 4).intdiv(2)}
# \u4F7F\u7528SNOWFLAKE\u7B97\u6CD5\u751F\u6210\u4E3B\u952E
spring.shardingsphere.sharding.tables.oms_order_item.key-generator.column=id
spring.shardingsphere.sharding.tables.oms_order_item.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.oms_order_item.key-generator.props.worker.id=123

# \u914D\u7F6E\u7ED1\u5B9A\u8868\uFF0C\u9632\u6B62\u7B1B\u5361\u5C14\u4E58\u79EF
spring.shardingsphere.sharding.binding-tables[0]=oms_order,oms_order_item
# \u6253\u5370SQL\u8BED\u53E5
spring.shardingsphere.props.sql.show=true

#\u914D\u5408SeataATOrderService\u793A\u4F8B\u914D\u7F6E
#spring.shardingsphere.datasource.names=ds0,ds1
#
#spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/micromall_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds0.initialSize=5
#spring.shardingsphere.datasource.ds0.minIdle=10
#spring.shardingsphere.datasource.ds0.maxActive=30
#spring.shardingsphere.datasource.ds0.validationQuery=SELECT 1 FROM DUAL
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=root
#
#spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/micromall_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds1.initialSize=5
#spring.shardingsphere.datasource.ds1.minIdle=10
#spring.shardingsphere.datasource.ds1.maxActive=30
#spring.shardingsphere.datasource.ds1.validationQuery=SELECT 1 FROM DUAL
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=root
#
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
#
#spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.t_order.key-generator.type=snowflake
#spring.shardingsphere.sharding.tables.t_order.key-generator.props.worker.id=123

